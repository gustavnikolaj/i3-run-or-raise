#!/usr/bin/env node

var _ = require('lodash');
var exec = require('child_process').exec;
var filter = require('../lib/filter');
var getWindows = require('../lib/getWindows');
var findWindowIdsByClass = require('../lib/findWindowIdsByClass');

var argv = require('optimist').alias('c', 'class')
                              .alias('n', 'name')
                              .argv;

getWindows(function (windows) {
    if (argv.n) {
        windows = filter.byName(windows, argv.n);
    }
    if (argv.c) {
        findWindowIdsByClass(argv.c, function (windowIds) {
            windows = filter.byWindowId(windows, windowIds);
            runOrRaise(windows);
        })
    } else {
        runOrRaise(windows);
    }
});

function runOrRaise(windows) {
    if (windows.length) {
        // find next unfocused in the matching set.
        var focused = _.find(function (item) {
            return item.focused;
        });
        var indexOfFocused = windows.indexOf(focused);
        var indexOfNext = (windows.length -1 === indexOfFocused) ? 0 : indexOfFocused + 1;

        exec('/usr/bin/i3-msg [id=' + windows[indexOfNext].window + '] focus');
    } else {
        if (argv._) {
            exec('/usr/bin/i3-msg exec --no-startup-id ' + argv._.join(' '));
        }
    }
}
